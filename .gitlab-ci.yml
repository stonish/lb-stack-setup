stages:
  - setup
  - contrib
  - make

# image should match what is used for lb-docker-run (see build-env)
image: gitlab-registry.cern.ch/lhcb-core/lbdocker/centos7-build:v4.57

variables:
  LHCB_ENV_MODE: "lbenv-stable"  # Use the default LbEnv environment from the lbdocker container

# setup as readme:
#   stage: setup
#   script:
#     - curl https://gitlab.cern.ch/rmatev/lb-stack-setup/raw/master/setup.py | python3 - -b $CI_COMMIT_SHA stack

setup:
  stage: setup
  tags:
    - cvmfs
  script:
    - git --version
    - python3 setup.py --debug --repo . --branch $CI_COMMIT_SHA stack
    - cd stack
    - utils/config.py useDistcc false
    - make contrib
    - bash utils/ci-utils/test-contrib.sh
  artifacts:
    paths:
      - stack/

.make:
  stage: make
  tags:
    - cvmfs
  variables:
    GIT_STRATEGY: none
    # make sure we don't use BINARY_TAG or CMTCONFIG
    PLATFORM: x86_64-centos7-gcc9-opt
  script:
    - cd stack
    - utils/config.py binaryTag $PLATFORM
    - utils/config.py
    - make Gaudi/configure
    - bash utils/ci-utils/test-cmake.sh Gaudi/build.$PLATFORM
    - make Gaudi
    - make Gaudi/configure  # test a reconfigure
    - bash utils/ci-utils/test-cmake.sh Gaudi/build.$PLATFORM
    # TODO test Detector when we switch to master
    - make LHCb/configure
    - bash utils/ci-utils/test-cmake.sh LHCb/build.$PLATFORM
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - stack/.ccache/

make:x86_64-centos7-gcc9-opt:
  extends: .make

# Keep old cmake until it's easy to support (in case we need it for legacy branches).
make-old-cmake:
  stage: make
  tags:
    - cvmfs
  variables:
    GIT_STRATEGY: none
  script:
    - cd stack
    - utils/config.py gitBranch.Gaudi v34r1
    - utils/config.py gitBranch.Detector v0-patches
    - make Gaudi/configure
    - bash utils/ci-utils/test-cmake.sh Gaudi/build.$(utils/config.py binaryTag)
    - make Gaudi
    - make Gaudi/configure  # test a reconfigure
    - bash utils/ci-utils/test-cmake.sh Gaudi/build.$(utils/config.py binaryTag)
    # Detector/v0-patches is a dummy, so no point in testing it
    - make LHCb/configure
    - bash utils/ci-utils/test-cmake.sh LHCb/build.$(utils/config.py binaryTag)
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - stack/.ccache/

check-formatting:
  stage: setup
  image: gitlab-registry.cern.ch/lhcb-docker/style-checker
  script:
    - curl -o lb-format "https://gitlab.cern.ch/lhcb-core/LbDevTools/raw/master/LbDevTools/SourceTools.py?inline=false"
    - python lb-format --format-patch apply-formatting.patch origin/master
  artifacts:
    paths:
      - apply-formatting.patch
    when: on_failure
    expire_in: 1 week
