stages:
  - setup
  - make

variables:
  LHCB_ENV_MODE: "lbenv-stable"  # Use the default LbEnv environment from the lbdocker container

# setup as readme:
#   stage: setup
#   script:
#     - curl https://gitlab.cern.ch/rmatev/lb-stack-setup/raw/master/setup.py | python3 - -b $CI_COMMIT_SHA stack

setup:
  stage: setup
  tags:
    - cvmfs
  image: gitlab-registry.cern.ch/lhcb-docker/os-base/alma9-devel:latest
  script:
    - . /cvmfs/lhcb.cern.ch/lib/LbEnv  # TODO remove this and test setup on all supported hosts
    - git --version
    - python3 setup.py --debug --repo . --branch $CI_COMMIT_SHA stack
    - cd stack
    - utils/config.py useDistcc false
    - make stack.code-workspace  # would install contrib
    - bash utils/ci-utils/test-contrib.sh
    - bash utils/ci-utils/test-build-env.sh
  artifacts:
    when: always
    paths:
      - stack/

.make:
  stage: make
  tags:
    - cvmfs
  image: gitlab-registry.cern.ch/lhcb-docker/os-base/alma9-devel:latest
  variables:
    GIT_STRATEGY: none
  before_script:
    - . /cvmfs/lhcb.cern.ch/lib/LbEnv  # TODO remove this and test setup on all supported hosts
  artifacts:
    paths:
      - stack/stack.code-workspace
      - stack/*/.vscode/c_cpp_properties.json
      - stack/*/.vscode/settings.json
      - stack/*/.env
      - stack/*/.ignore
      - stack/*/.clangd
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - stack/.ccache/

make:
  extends: .make
  script:
    - cd stack
    - bash utils/ci-utils/make-script.sh
    - make purge
    - make purge  # second purge should not fail

make-mono:
  extends: .make
  script:
    - cd stack
    - utils/config.py monoBuild true
    - utils/config.py defaultProjects '["LHCb"]'
    - bash utils/ci-utils/make-mono-script.sh

make-oos:
  extends: .make
  script:
    - cd stack
    - utils/config.py buildPath $TMPDIR
    - bash utils/ci-utils/make-script.sh
    - make purge
    - make purge  # second purge should not fail

make-oos-mono-bindfs:
  extends: .make
  script:
    - dnf install -y bindfs
    - cd stack
    - utils/config.py monoBuild true
    - utils/config.py defaultProjects '["LHCb"]'
    - utils/config.py targetBuildPath $TMPDIR
    - export BINARY_TAG=$(utils/config.py binaryTag)
    - utils/config.py binaryTag ''
    - bash utils/ci-utils/make-mono-script.sh

# build Moore on top of a released Allen
make-partial:
  extends: .make
  script:
    - cd stack
    - utils/config.py lcgVersion 103
    - utils/config.py binaryTag x86_64_v2-el9-gcc12-opt
    - utils/config.py cvmfsProjects.Allen v3r22p1
    - utils/config.py gitBranch.Moore v54r22p3
    # configure with functor cache to check cmake
    - make Moore/configure
    - PLATFORM=$(utils/config.py binaryTag)
    - bash utils/ci-utils/test-cmake.sh Moore/build.$PLATFORM
    # disable functor cache and build
    - utils/config.py -- cmakeFlags.Moore '-DLOKI_BUILD_FUNCTOR_CACHE=OFF'
    - make purge
    - make Moore
    - bash utils/ci-utils/test-misc.sh Moore

# Test legacy branches until it's easy to support.
make-legacy:
  stage: make
  tags:
    - cvmfs
  image: gitlab-registry.cern.ch/lhcb-docker/os-base/centos7-devel:latest
  variables:
    GIT_STRATEGY: none
    PLATFORM: x86_64-centos7-gcc62-opt
    LEGACY: 1
  script:
    - . /cvmfs/lhcb.cern.ch/lib/LbEnv  # TODO remove this and test setup on all supported hosts
    - export GAUDI_OLD_STYLE_PROJECT=YES  # FIXME: this shouldn't be needed
    - cd stack
    - test -n "$PLATFORM" && utils/config.py binaryTag $PLATFORM
    - PLATFORM=$(utils/config.py binaryTag)
    - utils/config.py lcgVersion 93
    - utils/config.py gitBranch.default 2018-patches
    - utils/config.py gitBranch.Gaudi v29-patches
    - utils/config.py  # print config
    - make Gaudi/configure
    - bash utils/ci-utils/test-cmake.sh Gaudi/build.$PLATFORM
    - make Gaudi
    - make Gaudi/configure  # test a reconfigure
    - bash utils/ci-utils/test-cmake.sh Gaudi/build.$PLATFORM
    - make LHCb/configure
    - bash utils/ci-utils/test-cmake.sh LHCb/build.$PLATFORM
    - bash utils/ci-utils/test-misc.sh LHCb
    - bash utils/ci-utils/test-test.sh
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - stack/.ccache/

check-formatting:
  stage: setup
  tags:
    - cvmfs
  script:
    - . /cvmfs/lhcb.cern.ch/lib/LbEnv
    - curl -o lb-format "https://gitlab.cern.ch/lhcb-core/LbDevTools/raw/master/LbDevTools/SourceTools.py?inline=false"
    - python lb-format --format-patch apply-formatting.patch origin/master
  artifacts:
    paths:
      - apply-formatting.patch
    when: on_failure
    expire_in: 1 week
