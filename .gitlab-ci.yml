stages:
  - setup
  - make

# image should match what is used for lb-docker-run (see build-env)
image: gitlab-registry.cern.ch/lhcb-core/lbdocker/centos7-build:v4.57

variables:
  LHCB_ENV_MODE: "lbenv-stable"  # Use the default LbEnv environment from the lbdocker container

# setup as readme:
#   stage: setup
#   script:
#     - curl https://gitlab.cern.ch/rmatev/lb-stack-setup/raw/master/setup.py | python3 - -b $CI_COMMIT_SHA stack

setup:
  stage: setup
  tags:
    - cvmfs
  script:
    - git --version
    - python3 setup.py --debug --repo . --branch $CI_COMMIT_SHA stack
    - cd stack
    - utils/config.py useDistcc false
    - make stack.code-workspace  # would install contrib
    - bash utils/ci-utils/test-contrib.sh
    - bash utils/ci-utils/test-build-env.sh
  artifacts:
    when: always
    paths:
      - stack/

.make:
  stage: make
  tags:
    - cvmfs
  variables:
    GIT_STRATEGY: none
  artifacts:
    paths:
      - stack/stack.code-workspace
      - stack/*/.vscode/c_cpp_properties.json
      - stack/*/.vscode/settings.json
      - stack/*/.env
      - stack/*/.ignore
      - stack/*/.clangd
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - stack/.ccache/

make:
  extends: .make
  script:
    - cd stack
    - bash utils/ci-utils/make-script.sh
    - make purge
    - make purge  # second purge should not fail

make-mono:
  extends: .make
  script:
    - cd stack
    - utils/config.py monoBuild true
    - utils/config.py defaultProjects '["LHCb"]'
    - bash utils/ci-utils/make-mono-script.sh
    - make purge
    - make purge  # second purge should not fail

make-oos:
  extends: .make
  script:
    - cd stack
    - utils/config.py buildPath $TMPDIR
    - bash utils/ci-utils/make-script.sh
    - make purge
    - make purge  # second purge should not fail

make-oos-mono-bindfs:
  extends: .make
  script:
    - sudo yum install -y bindfs
    - cd stack
    - utils/config.py monoBuild true
    - utils/config.py defaultProjects '["LHCb"]'
    - utils/config.py targetBuildPath $TMPDIR
    - export BINARY_TAG=$(utils/config.py binaryTag)
    - utils/config.py binaryTag ''
    - bash utils/ci-utils/make-mono-script.sh
    - make purge
    - make purge  # second purge should not fail

# Test legacy branches until it's easy to support.
make-legacy:
  stage: make
  tags:
    - cvmfs
  variables:
    GIT_STRATEGY: none
    PLATFORM: x86_64-centos7-gcc62-opt
    LEGACY: 1
  script:
    - export GAUDI_OLD_STYLE_PROJECT=YES  # FIXME: this shouldn't be needed
    - cd stack
    - test -n "$PLATFORM" && utils/config.py binaryTag $PLATFORM
    - PLATFORM=$(utils/config.py binaryTag)
    - utils/config.py lcgVersion 93
    - utils/config.py gitBranch.default 2018-patches
    - utils/config.py gitBranch.Gaudi v29-patches
    - utils/config.py  # print config
    - make Gaudi/configure
    - bash utils/ci-utils/test-cmake.sh Gaudi/build.$PLATFORM
    - make Gaudi
    - make Gaudi/configure  # test a reconfigure
    - bash utils/ci-utils/test-cmake.sh Gaudi/build.$PLATFORM
    - make LHCb/configure
    - bash utils/ci-utils/test-cmake.sh LHCb/build.$PLATFORM
    - bash utils/ci-utils/test-misc.sh
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - stack/.ccache/

check-formatting:
  stage: setup
  image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7
  script:
    - . /cvmfs/lhcb.cern.ch/lib/LbEnv
    - curl -o lb-format "https://gitlab.cern.ch/lhcb-core/LbDevTools/raw/master/LbDevTools/SourceTools.py?inline=false"
    - python lb-format --format-patch apply-formatting.patch origin/master
  artifacts:
    paths:
      - apply-formatting.patch
    when: on_failure
    expire_in: 1 week
